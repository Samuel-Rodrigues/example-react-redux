{"ast":null,"code":"var _jsxFileName = \"/Users/samuelrodrigues/Documents/Projetos estudos/example-react-redux/src/components/sidebar/Index.js\";\nimport React from 'react'; // conncet do redux compartilha estado, ações via componentes\n\nimport { connect } from 'react-redux';\n\nfunction toggleLesson(module, lesson) {\n  return {\n    type: 'TOGGLE_LESSON',\n    //Ação que esta sendo realizado(Tem que ser única)\n    module,\n    lesson\n  };\n}\n\nfunction incrementState(count) {\n  return {\n    type: 'INCREMENT_STATE',\n    countIncremented: count++\n  };\n} //modules é o objeto criado no connet com a resposta do estado\n//Dispatch serva para disparar actions para o redux\n\n\nconst Sidebar = ({\n  modules,\n  dispatch\n}) => React.createElement(\"aside\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, modules.map(module => React.createElement(\"div\", {\n  key: module.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, module.title), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, module.lessons.map(lesson => React.createElement(\"li\", {\n  key: lesson.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, lesson.title, React.createElement(\"button\", {\n  onClick: () => dispatch(toggleLesson(module, lesson), dispatch(incrementState())),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Selecionar\"))))))); //Connect recebe uma função que recebe um estado e retorna um obj\n// com quais informações eu quero do estado\n\n\nexport default connect(state => ({\n  modules: state.course.modules,\n  count: state.count\n}))(Sidebar);","map":{"version":3,"sources":["/Users/samuelrodrigues/Documents/Projetos estudos/example-react-redux/src/components/sidebar/Index.js"],"names":["React","connect","toggleLesson","module","lesson","type","incrementState","count","countIncremented","Sidebar","modules","dispatch","map","id","title","lessons","state","course"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsC;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AACmB;AACxBF,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;AAED,SAASE,cAAT,CAAwBC,KAAxB,EAA8B;AAC5B,SAAM;AACJF,IAAAA,IAAI,EAAE,iBADF;AAEJG,IAAAA,gBAAgB,EAAED,KAAK;AAFnB,GAAN;AAID,C,CAED;AACA;;;AACA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,OAAO,CAACE,GAAR,CAAYT,MAAM,IACjB;AAAK,EAAA,GAAG,EAAEA,MAAM,CAACU,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAASV,MAAM,CAACW,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGX,MAAM,CAACY,OAAP,CAAeH,GAAf,CAAmBR,MAAM,IACxB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACS,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGT,MAAM,CAACU,KADV,EAEE;AAAQ,EAAA,OAAO,EAAE,MAAMH,QAAQ,CAACT,YAAY,CAACC,MAAD,EAASC,MAAT,CAAb,EAC7BO,QAAQ,CAACL,cAAc,EAAf,CADqB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADD,CADH,CAFF,CADD,CADH,CADF,C,CAqBA;AACA;;;AACA,eAAeL,OAAO,CAACe,KAAK,KAAK;AAC/BN,EAAAA,OAAO,EAAEM,KAAK,CAACC,MAAN,CAAaP,OADS;AAE/BH,EAAAA,KAAK,EAAES,KAAK,CAACT;AAFkB,CAAL,CAAN,CAAP,CAGXE,OAHW,CAAf","sourcesContent":["import React from 'react';\n\n// conncet do redux compartilha estado, ações via componentes\nimport { connect } from 'react-redux'\n\nfunction toggleLesson(module, lesson) {\n  return {\n    type: 'TOGGLE_LESSON',  //Ação que esta sendo realizado(Tem que ser única)\n    module,\n    lesson\n  }\n}\n\nfunction incrementState(count){\n  return{\n    type: 'INCREMENT_STATE',\n    countIncremented: count ++\n  }\n}\n\n//modules é o objeto criado no connet com a resposta do estado\n//Dispatch serva para disparar actions para o redux\nconst Sidebar = ({ modules, dispatch }) =>\n  <aside>\n    {modules.map(module => (\n      <div key={module.id}>\n        <strong>{module.title}</strong>\n        <ul>\n          {module.lessons.map(lesson => (\n            <li key={lesson.id}>\n              {lesson.title}\n              <button onClick={() => dispatch(toggleLesson(module, lesson),\n                dispatch(incrementState())\n                )}>\n                Selecionar\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ))}\n  </aside>;\n\n//Connect recebe uma função que recebe um estado e retorna um obj\n// com quais informações eu quero do estado\nexport default connect(state => ({ \n  modules: state.course.modules,\n  count: state.count \n}))(Sidebar);\n"]},"metadata":{},"sourceType":"module"}