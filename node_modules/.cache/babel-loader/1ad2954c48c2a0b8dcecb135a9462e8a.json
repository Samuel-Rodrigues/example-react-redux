{"ast":null,"code":"//CreateStore Cria estado global da aplicação\nconst INITIAL_STATE = {\n  count: 0\n}; //Função que retorar o estado inicial\n//Reducer recebe 2 parametros. Para quando action for disparado.\n//Primeiro estado (Estado antes da action ser disparada)\n//Segunda estado (Action )\n\nexport default function count(state = INITIAL_STATE, action) {\n  if (action.type === 'INCREMENT_STATE') {\n    return {\n      count: action.count\n    };\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/samuelrodrigues/Documents/Projetos estudos/example-react-redux/src/store/reducers/Count.js"],"names":["INITIAL_STATE","count","state","action","type"],"mappings":"AAAA;AAEA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB,C,CAIA;AACA;AACA;AACA;;AACA,eAAe,SAASA,KAAT,CAAeC,KAAK,GAAGF,aAAvB,EAAsCG,MAAtC,EAA8C;AAC3D,MAAIA,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AACrC,WAAO;AAAEH,MAAAA,KAAK,EAAEE,MAAM,CAACF;AAAhB,KAAP;AACD;;AACD,SAAOC,KAAP;AACD","sourcesContent":["//CreateStore Cria estado global da aplicação\n\nconst INITIAL_STATE = {\n  count: 0\n}\n\n//Função que retorar o estado inicial\n//Reducer recebe 2 parametros. Para quando action for disparado.\n//Primeiro estado (Estado antes da action ser disparada)\n//Segunda estado (Action )\nexport default function count(state = INITIAL_STATE, action) {\n  if (action.type === 'INCREMENT_STATE') {\n    return { count: action.count }\n  }\n  return state\n}"]},"metadata":{},"sourceType":"module"}